@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@model BlogAppetit.Web.Models.ViewModels.BlogDetailsViewModel


@{
    ViewData["Title"] = Model.PageTitle;
}

<div class="container my-5">
    <div class="row justify-content-center">
        <div class="col-12 col-lg-6">
            @if (Model != null)
            {
                <h1 class="mb-3"> @Model.Heading </h1>


                <p class="mb-2"> Escrito por: @Model.Author <br /> Publicado em: @Model.PublishedDate.ToShortDateString()</p>

                <p class="mb-3">
                    @foreach (var tag in Model.Tags)
                    {
                        <span class="badge bg-black me-1">@tag.Name</span>
                    }
                </p>
                <div class="mb-3">

                    @if (SignInManager.IsSignedIn(User))
                    {
                        @if (Model.Liked)
                        {
                            <a style="cursor: pointer;">
                                <i class="bi bi-hand-thumbs-up-fill"></i>
                            </a>
                        }
                        else
                        {
                            <a id="btnLike" style="cursor: pointer;">
                                <i class="bi bi-hand-thumbs-up"></i>
                            </a>
                        }

                        <span id="totalLikes"> @Model.TotalLikes likes</span>

                    }
                </div>
                <hr />
                <img src="@Model.FeaturedImageUrl" alt="@Model.Heading" class="mb-3 d-block img-fluid rounded border shadow" />
                <div mb-3 class="blog-details-content">
                    @Html.Raw(@Model.Content)
                </div>

                <div class="card">
                    <div class="card-header"> 
                        <h5>Comentários</h5>

                        @if (SignInManager.IsSignedIn(User))
                        {
                            <form method="post">
                                <div class="mb-3">
                                    <label class="form-label">Comentario</label>
                                    <input type="text" class="form-control" asp-for="CommentDescription">
                                    <small class="form-text text-muted">Lembre-se de ser respeituoso</small>
                                </div>
                                <div class="mb-3">
                                    <button type="submit" class="btn btn-outline-success"> Postar </button>
                                    <input type="hidden" asp-for =Id />
                                    <input type="hidden" asp-for="UrlHandle" />
                                </div>
                            </form>
                        }
                    </div>

                    <div class="card-body">
                        @if (Model.Comments != null)
                        {
                            @foreach (var comment in Model.Comments)
                            {
                                <div class="card mb-3">
                                    <div class="card-body">
                                        <div>
                                            @comment.Description
                                        </div>
                                        <div class="d-flex justify-content-between">
                                            <span class="text-secondary">Por: @comment.User</span>
                                            <span class="text-secondary">Em: @comment.DateAdded.ToLongTimeString()</span>
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                    </div>

                </div>

          
            }
            else
            {
                <p>Blog post not found.</p>
            }
            
        </div>
    </div>
</div>


@section Scripts
    {
    <script>



        const btnLikeElement = document.getElementById('btnLike');

        const totalLikesElement = document.getElementById('totalLikes');

        async function getTotalLikes() {
            fetch('/api/blogpostlike/@Model.Id/totalLikes', {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json',
                    'Accept': '*/*'
                }
            })
                .then(response => response.json())
                .then(data => {
                    totalLikesElement.innerHTML = data + ' likes';
                });
        }

        async function addLikeForBlog() {
            try {
                const response = await fetch('/api/BlogPostLike/Add', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'Accept': '*/*'
                    },
                    body: JSON.stringify({
                        blogPostId: '@Model.Id',
                        userId: '@UserManager.GetUserId(User)'
                    })
                });

                btnLikeElement.innerHTML = '<i class="bi bi-hand-thumbs-up-fill"></i>';
                btnLikeElement.removeEventListener('click', addLikeForBlog);
                getTotalLikes();
            } catch (error) {
                console.error(error);
            }
        }



        btnLikeElement.addEventListener('click', addLikeForBlog);
    </script>
}